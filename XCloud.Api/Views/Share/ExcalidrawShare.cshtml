@using System.Text.Json
@model XCloud.Sharing.Api.Dto.Shares.ExcalidrawShare

<!DOCTYPE html>
<html lang="en-us">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>@Model.Title</title>

    <script src="https://s.logrus.dev/lz-string.min.js"></script>
    <script src="https://s.logrus.dev/react-18.2.production.min.js"></script>
    <script src="https://s.logrus.dev/react-dom-18.2.production.min.js"></script>

    <script
        type="text/javascript"
        src="https://s.logrus.dev/excalidraw.production.min.js"
    ></script>

    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" type="image/png" href="/favicon.ico" />
    <script>
        var compressedDrawingData = `@Html.Raw(Model.CompressedDrawingData)`.replace(/\s/g, '');
        var embeddedFiles = @Html.Raw(JsonSerializer.Serialize(Model.EmbeddedFiles));
    </script>
</head>

<body>
<div id="app"></div>
<div style="width: 100%; display: flex; flex-direction: row; justify-content: center; gap: 8px">
    <span>&copy; Copyright 2020-@DateTime.Now.Year</span> <a href="https://logrus.dev">logrus.dev</a>
</div>
<script type="text/javascript">
    const drawingData = JSON.parse(LZString.decompressFromBase64(compressedDrawingData));
    drawingData.files = Object.fromEntries(Object.keys(embeddedFiles).map(k => {
      const embeddedFile = embeddedFiles[k];
      const fileInfo = {
        mimeType: embeddedFile.MimeType,
        id: k,
        dataURL: `data:${embeddedFile.MimeType};base64,${embeddedFile.Base64Content}`,
      };
      return [k, fileInfo];
    }));
    const App = () => {
        return React.createElement(
            React.Fragment,
            null,
            React.createElement(
                "div",
                {
                    style: { height: "100svh", width: "100svw" },
                },
                React.createElement(ExcalidrawLib.Excalidraw, {
                    initialData: drawingData,
                    isCollaborating: false,
                    viewModeEnabled: true,
                }),
            ),
        );
    };

    const excalidrawWrapper = document.getElementById("app");
    const root = ReactDOM.createRoot(excalidrawWrapper);
    root.render(React.createElement(App));

</script>
</body>

</html>
